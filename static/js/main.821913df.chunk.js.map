{"version":3,"sources":["EmotionTable.js","App.js","reportWebVitals.js","index.js"],"names":["EmotionTable","this","props","emotions","style","color","fontSize","emotion","key","push","className","map","emotion_local","index","value","React","Component","App","state","innercomp","rows","cols","id","mode","sentimentOutput","sentiment","renderTextArea","document","getElementById","setState","renderTextBox","sendForSentimentAnalysis","url","axios","get","then","response","data","output","sendForEmotionAnalysis","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.821913df.chunk.js","sourcesContent":["import React from 'react';\r\nimport './bootstrap.min.css';\r\n\r\nclass EmotionTable extends React.Component {\r\n\r\n\r\n    render() {\r\n        if (this.props.emotions === 'err') {\r\n           return (\r\n               <div style={{color:\"red\",fontSize:20}}>An error occurred! Please change the text and try again!</div>\r\n           );\r\n        }\r\n        let emotion = [];\r\n        for(let key in this.props.emotions){\r\n            emotion.push({'key':key , 'value': this.props.emotions[key]});\r\n        }\r\n        return (\r\n        <div>\r\n          <table className=\"table table-bordered\">\r\n            <tbody>\r\n            {\r\n                emotion.map(function(emotion_local, index){\r\n                    return (\r\n                        <tr><td>{emotion_local.key}</td><td>{emotion_local.value}</td></tr>\r\n                    )\r\n                })\r\n            }\r\n            </tbody>\r\n          </table>\r\n          </div>\r\n          );\r\n        }\r\n}\r\nexport default EmotionTable;\r\n","import './bootstrap.min.css';\r\nimport './App.css';\r\nimport EmotionTable from './EmotionTable.js';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\n\r\nclass App extends React.Component {\r\n  state = {innercomp:<textarea rows=\"4\" cols=\"50\" id=\"textinput\"/>,\r\n            mode: \"text\",\r\n          sentimentOutput:[],\r\n          sentiment:true\r\n        }\r\n  \r\n  renderTextArea = ()=>{\r\n    document.getElementById(\"textinput\").value = \"\";\r\n    if(this.state.mode === \"url\") {\r\n      this.setState({innercomp:<textarea rows=\"4\" cols=\"50\" id=\"textinput\"/>,\r\n      mode: \"text\",\r\n      sentimentOutput:[],\r\n      sentiment:true\r\n    })\r\n    } \r\n  }\r\n\r\n  renderTextBox = ()=>{\r\n    document.getElementById(\"textinput\").value = \"\";\r\n    if(this.state.mode === \"text\") {\r\n      this.setState({innercomp:<textarea rows=\"1\" cols=\"50\" id=\"textinput\"/>,\r\n      mode: \"url\",\r\n      sentimentOutput:[],\r\n      sentiment:true\r\n    })\r\n    }\r\n  }\r\n\r\n  sendForSentimentAnalysis = () => {\r\n    this.setState({sentiment:true});\r\n    let ret = \"\";\r\n    let url = \"https://sentiment-analyzer-smart-giraffe-pt.mybluemix.net\";\r\n\r\n    if(this.state.mode === \"url\") {\r\n      url = url+\"/url/sentiment?url=\"+document.getElementById(\"textinput\").value;\r\n    } else {\r\n      url = url+\"/text/sentiment?text=\"+document.getElementById(\"textinput\").value;\r\n    }\r\n    ret = axios.get(url);\r\n    ret.then((response)=>{\r\n\r\n      //Include code here to check the sentiment and fomrat the data accordingly\r\n\r\n      this.setState({sentimentOutput:response.data});\r\n      let output = response.data;\r\n      if (output == 'err') {\r\n        output = <div style={{color:\"red\",fontSize:20}}>An error occurred! Please change the text and try again!</div>\r\n        this.setState({sentimentOutput:output});\r\n        return;\r\n      }\r\n      if(response.data === \"positive\") {\r\n        output = <div style={{color:\"green\",fontSize:20}}>{response.data}</div>\r\n      } else if (response.data === \"negative\"){\r\n        output = <div style={{color:\"red\",fontSize:20}}>{response.data}</div>\r\n      } else {\r\n        output = <div style={{color:\"orange\",fontSize:20}}>{response.data}</div>\r\n      }\r\n      this.setState({sentimentOutput:output});\r\n    });\r\n  }\r\n\r\n  sendForEmotionAnalysis = () => {\r\n    this.setState({sentiment:false});\r\n    let ret = \"\";\r\n    let url = \"https://sentiment-analyzer-smart-giraffe-pt.mybluemix.net\";\r\n    if(this.state.mode === \"url\") {\r\n      url = url+\"/url/emotion?url=\"+document.getElementById(\"textinput\").value;\r\n    } else {\r\n      url = url+\"/text/emotion/?text=\"+document.getElementById(\"textinput\").value;\r\n    }\r\n    ret = axios.get(url);\r\n\r\n    ret.then((response)=>{\r\n      this.setState({sentimentOutput:<EmotionTable emotions={response.data}/>});\r\n  });\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (  \r\n      <div className=\"App\">\r\n      <button className=\"btn btn-info\" onClick={this.renderTextArea}>Text</button>\r\n        <button className=\"btn btn-dark\"  onClick={this.renderTextBox}>URL</button>\r\n        <br/><br/>\r\n        {this.state.innercomp}\r\n        <br/>\r\n        <button className=\"btn-primary\" onClick={this.sendForSentimentAnalysis}>Analyze Sentiment</button>\r\n        <button className=\"btn-primary\" onClick={this.sendForEmotionAnalysis}>Analyze Emotion</button>\r\n        <br/>\r\n            {this.state.sentimentOutput}\r\n      </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}